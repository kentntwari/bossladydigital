// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id @default(cuid())
  name   String
  email  String  @unique
  orders Order[]

  @@map("users")
}

model Product {
  id              String  @id @default(cuid())
  stripeProductId String  @unique @map("stripe_product_id")
  stripePriceId   String  @unique @map("stripe_price_id")
  name            String
  price           Decimal @db.Money
  currency        String
  description     String
  checklistUrl    String  @map("checklist_url")
  orders          Order[]

  @@map("products")
}

model Order {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  payment   Payment  @relation(fields: [paymentId], references: [id])
  userId    String   @map("user_id")
  productId String   @map("product_id")
  paymentId String   @map("payment_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session   Session?

  @@map("orders")
}

model Payment {
  id      String   @id @default(cuid())
  isDone  Boolean  @map("is_done")
  order   Order[]
  session Session?
}

model Session {
  id              String  @id @default(cuid())
  stripeSessionId String  @unique @map("stripe_session_id")
  hasBeenViewed   Boolean @default(false) @map("has_been_viewed")
  order           Order   @relation(fields: [orderId], references: [id])
  payment         Payment @relation(fields: [paymentId], references: [id])
  orderId         String  @unique @map("order_id")
  paymentId       String  @unique @map("payment_id")
}
